#!/usr/bin/env bash

source /usr/share/dogfish/shell-migrations/shared/create-users.sh

# $1: Topic to subscribe to
# $2+: Command to run upon message reception.
#   Vars $topic $message will be avalible to the command.
# TODO: This should be moved to a shared location. 
function subscribe()
{
    sub_topic="$1"
    shift
    # Wait until MQTT network is up before trying to connect.
    until response=$(mosquitto_pub -i mqtt_sub -h mqtt -p 1883 -q 2 \
        -t testing/connection \
        -m "Test body" \
        -u ${ADMIN_USER} \
        -P "$(cat /run/secrets/admin_password)" \
        2>&1)
    do
        echo "Couldn't connect to MQTT. Response: $response"
        sleep 5
    done

    while true
    do
        #echo "Starting read."
        while read RAW_DATA;
        do
            #echo "RAW_DATA: $RAW_DATA"
            local topic=$(echo "$RAW_DATA" | cut -d" " -f1 )
            local message=$(echo "$RAW_DATA" | cut -d" " -f2- )
            "$@"
        # TODO: client-id (-i) should be set per container by var rather than hardcode here. 
        done < <( mosquitto_sub -i "mqtt_sub" -h "mqtt" -p 1883 -q 2 \
            -c \
            -t "$sub_topic" \
            -u "${ADMIN_USER}" \
            -P "$(cat /run/secrets/admin_password)" \
            -v )
        echo "MQTT listener finished sub processing. Sleeping and restarting subscription."
        sleep 10
    done
    echo "If you see this, something has gone wrong."
}

# $topic: MQTT Topic sent  
# $message: The message sent
# These vars should be set by the subscribe function. 
function add_user()
{
    username=$(echo "$topic" | rev | cut -d"/" -f1 | rev)
    password="$message"

    add_user_to_vernemq "$username" "$message"
    echo "Added MQTT user: $username"
    echo "Password: $password"
}

# /usr/share/mqtt-scripts/pub.sh
subscribe mqtt/add/user/# add_user